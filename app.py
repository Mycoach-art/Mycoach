import streamlit as st
import pandas as pd
import datetime

st.set_page_config(page_title='üöÄ Athl√®te Pro Tracker', layout='wide')
st.title('üèãÔ∏è Athl√®te Pro Tracker')

@st.cache_data
def load_data():
    try:
        return pd.read_csv('data.csv')
    except:
        return pd.DataFrame(columns=["Date", "Bloc", "S√©ance", "Exercice", "Set", "Charge", "R√©p√©titions", "Tempo", "Repos", "RPE", "Technique"])

def save_data(df):
    df.to_csv('data.csv', index=False)

data = load_data()

bloc = st.selectbox("Choisir le Bloc", ["Hypertrophie", "Force", "M√©tabolique", "D√©charge"])
seance = st.selectbox("S√©lectionner la S√©ance", ["S√©ance 1", "S√©ance 2", "S√©ance 3"])

exercices_principaux = ["Squat profond", "D√©velopp√© couch√© halt√®res", "Tractions lest√©es neutres", "Soulev√© de terre roumain", "D√©velopp√© inclin√© halt√®res", "Rowing halt√®re unilat√©ral", "Front Squat", "D√©velopp√© d√©clin√© halt√®res", "Back Squat", "D√©velopp√© couch√© barre", "Tractions lest√©es", "Deadlift traditionnel", "D√©velopp√© inclin√© barre", "Rowing Pendlay lourd barre", "Front Squat lourd", "D√©velopp√© d√©clin√© barre lourd"]

# Programme d√©taill√© complet incluant tous les blocs et s√©ances
programme_detaille = {
    "Hypertrophie": {
        "S√©ance 1": [
            ("Squat profond", 4, "8-10", "3-0-1-0", "90s", "Aucune"),
            ("D√©velopp√© couch√© halt√®res", 4, "8-10", "3-0-1-0", "90s", "Rest-Pause derni√®re s√©rie"),
            ("Tractions lest√©es neutres", 4, "8", "3-1-1-0", "90s", "Aucune"),
            ("Fentes march√©es halt√®res", 3, "10-12", "2-0-1-0", "60s", "Drop Set derni√®re s√©rie"),
            ("√âl√©vations lat√©rales halt√®res", 3, "12-15", "2-0-1-1", "60s", "Drop Set derni√®re s√©rie"),
            ("Oiseau halt√®res", 3, "12-15", "2-0-1-1", "60s", "Drop Set derni√®re s√©rie"),
            ("Curl marteau halt√®res", 3, "10-12", "2-0-1-0", "60s", "Rest-Pause derni√®re s√©rie"),
            ("Dips lest√©s", 3, "10-12", "2-0-1-0", "60s", "Rest-Pause derni√®re s√©rie")
        ],
        "S√©ance 2": [
            ("Soulev√© de terre roumain", 4, "8-10", "3-1-1-0", "90s", "Aucune"),
            ("D√©velopp√© inclin√© halt√®res", 4, "8-10", "3-0-1-0", "90s", "Rest-Pause derni√®re s√©rie"),
            ("Rowing halt√®re unilat√©ral", 4, "10-12", "2-1-1-1", "90s", "Drop Set derni√®re s√©rie"),
            ("Hip Thrust", 3, "12-15", "2-0-1-2", "60s", "Myo-Reps derni√®re s√©rie"),
            ("Shrugs halt√®res", 3, "12-15", "2-0-1-1", "60s", "Drop Set derni√®re s√©rie"),
            ("Face Pull poulie", 3, "12-15", "2-0-1-1", "60s", "Drop Set derni√®re s√©rie"),
            ("Curl EZ barre", 3, "12-15", "2-0-1-0", "60s", "Drop Set derni√®re s√©rie"),
            ("Extensions triceps poulie corde", 3, "12-15", "2-0-1-0", "60s", "Drop Set derni√®re s√©rie")
        ],
        "S√©ance 3": [
            ("Front Squat", 4, "6-8", "3-0-1-0", "90s", "Aucune"),
            ("D√©velopp√© d√©clin√© halt√®res", 4, "8-10", "3-0-1-0", "90s", "Rest-Pause derni√®re s√©rie"),
            ("Tirage horizontal poulie basse", 4, "10-12", "2-1-1-1", "90s", "Drop Set derni√®re s√©rie"),
            ("Leg Curl allong√©", 3, "12-15", "2-0-1-1", "60s", "Myo-Reps derni√®re s√©rie"),
            ("D√©velopp√© militaire halt√®res", 3, "10-12", "2-0-1-0", "60s", "Rest-Pause derni√®re s√©rie"),
            ("Curl inclin√© halt√®res", 3, "12-15", "3-0-1-0", "60s", "Drop Set derni√®re s√©rie"),
            ("Skullcrushers barre EZ", 3, "12-15", "3-0-1-0", "60s", "Drop Set derni√®re s√©rie")
        ]
    },
    "Force": {"S√©ance 1": [...], "S√©ance 2": [...], "S√©ance 3": [...]},
    "M√©tabolique": {"S√©ance 1": [...], "S√©ance 2": [...], "S√©ance 3": [...]},
    "D√©charge": {"S√©ance 1": "R√©duction 50% volume", "S√©ance 2": "R√©duction 50% volume", "S√©ance 3": "R√©duction 50% volume"}
}

with st.form("nouvelle_seance"):
    st.subheader(f"üìå {bloc} - {seance} - {datetime.date.today()}")
    exercice = st.selectbox("Exercice", [exo[0] for exo in programme_detaille[bloc][seance] if isinstance(exo, tuple)])
    set_no = st.number_input("Num√©ro du set", 1, 10, 1)
    charge = st.number_input("Charge (kg)", 0.0, 500.0, step=0.5)
    repetitions = st.number_input("R√©p√©titions", 1, 50, 10)
    tempo = st.text_input("Tempo", "3-0-1-0")
    repos = st.number_input("Repos (sec)", 10, 300, 90)
    rpe = st.slider("RPE (Difficult√©)", 1, 10, 8)
    technique = st.selectbox("Technique d'intensification", ["Aucune", "Rest-Pause", "Drop Set", "Myo-Reps"])
    submitted = st.form_submit_button("‚úÖ Enregistrer ce set")

    if submitted:
        new_data = pd.DataFrame([{"Date": datetime.date.today(), "Bloc": bloc, "S√©ance": seance, "Exercice": exercice, "Set": set_no, "Charge": charge, "R√©p√©titions": repetitions, "Tempo": tempo, "Repos": repos, "RPE": rpe, "Technique": technique}])
        data = pd.concat([data, new_data], ignore_index=True)
        save_data(data)
        st.success("üéâ Donn√©es enregistr√©es avec succ√®s !")

if st.checkbox("üìã Voir mon Programme complet"):
    st.subheader(f"üóì Programme D√©taill√© - {bloc} / {seance}")
    st.table(pd.DataFrame(programme_detaille[bloc][seance], columns=["Exercice", "Sets", "Reps", "Tempo", "Repos", "Technique"]))


